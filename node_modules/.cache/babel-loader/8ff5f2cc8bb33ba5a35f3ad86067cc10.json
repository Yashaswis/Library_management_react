{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_projects\\\\library_management\\\\src\\\\components\\\\ListBook.js\";\nimport './Style.css';\nimport { Table } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass ListBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      books: [],\n      response: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:8080/books').then(response => {\n      this.setState({\n        books: response.data\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  delete(Bookid) {\n    const {\n      books\n    } = this.state;\n    axios.delete('http://localhost:8080/books/${this.state.Bookid}', {\n      Bookid\n    }).then(result => {\n      alert(result.data);\n      this.setState({\n        response: result,\n        books: books.filter(Book => Book.bookid !== Bookid)\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      books\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, \"Error:\", error.message);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"table table-striped table-dark\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, \"BookId\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }\n      }, \"BookName\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }, \"Edition\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, \"Amount\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, books.map(book => /*#__PURE__*/React.createElement(\"tr\", {\n        key: book.Bookid,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, book.bookid), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, book.bookname), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, book.edition), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, book.author), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, book.date), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, book.amount), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"la\",\n        classname: \"mr-2\",\n        variant: \"info\",\n        onClick: () => this.props.edit(book.Bookid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"danger\",\n        onClick: () => this.delete(book.Bookid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"Delete\")))))));\n    }\n  }\n\n}\n\nexport default ListBook; // import React, { Component } from 'react';\n// import AddBook from './AddBook';\n// import PaginationButtons from './pagination';\n// import './Style.css';\n// class ListBook extends Component {\n//     state = {\n//         currentIndex: -1,\n//         list: this.returnList()\n//     }\n//     returnList() {\n//         if (localStorage.getItem('Books') == null)\n//             localStorage.setItem('Books', JSON.stringify([]))\n//         return JSON.parse(localStorage.getItem('Books'))\n//     }\n//     handleEdit = index => {\n//         this.setState({\n//             currentIndex: index\n//         })\n//     }\n//     handleDelete = (index) => {\n//         var list = this.returnList()\n//         list.splice(index, 1);\n//         localStorage.setItem('Books', JSON.stringify(list))\n//         this.setState({ list, currentIndex: -1 })\n//     }\n//     onAddOrEdit = (data) => {\n//         var list = this.returnList()\n//         if (this.state.currentIndex == -1)\n//             list.push(data)\n//         else\n//             list[this.state.currentIndex] = data\n//         localStorage.setItem('Books', JSON.stringify(list))\n//         this.setState({ list, currentIndex: -1 })\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <AddBook\n//                     currentIndex={this.state.currentIndex}\n//                     list={this.state.list}\n//                     onAddOrEdit={this.onAddOrEdit}\n//                 />\n//                 <hr />\n//                 <h3>List of books</h3>\n//                 <div class=\"bs-example\">\n//                 <table className=\"table table-striped table-dark\" >\n//                     <thead>\n//                         <tr>\n//                             <th >Bookid</th>\n//                             <th >BookName</th> \n//                             <th>Edition</th> \n//                             <th >Author</th>\n//                             <th >Date</th>\n//                             <th >Amount</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {this.state.list.map((item, index) => {\n//                             return <tr key={index}>\n//                                 <td >{index}</td>\n//                                 <td >{item.BookName}</td>\n//                                 <td >{item.Edition}</td>\n//                                 <td>{item.Author}</td>\n//                                 <td >{item.Date}</td>\n//                                 <td >{item.Price}</td>\n//                                 <td><button className=\"buttons\" onClick={() => this.handleEdit(index)}>Edit</button></td>\n//                                 <td><button className=\"buttons\" onClick={() => this.handleDelete(index)}>Delete</button></td>\n//                             </tr>\n//                         })}\n//                     </tbody>\n//                 </table>\n//                 <PaginationButtons />\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n// export default ListBook;","map":{"version":3,"sources":["D:/React_projects/library_management/src/components/ListBook.js"],"names":["Table","Button","React","Component","axios","ListBook","constructor","props","state","error","books","response","componentDidMount","get","then","setState","data","delete","Bookid","result","alert","filter","Book","bookid","render","message","map","book","bookname","edition","author","date","amount","edit"],"mappings":"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KAAKzB,KAAL,CAAW0B,IAAX,CAAgBN,IAAI,CAACT,MAArB,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,eACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE,MAAM,KAAKD,MAAL,CAAYU,IAAI,CAACT,MAAjB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAPA,CADC,CADD,CAXJ,CADJ,CADA;AA+BH;AACJ;;AAxEgC;;AA0EjC,eAAeb,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import './Style.css';\r\nimport { Table } from 'react-bootstrap';\r\nimport {Button}from 'react-bootstrap';\r\nimport React, { Component } from 'react'  \r\nimport axios from 'axios';  \r\n\r\nclass ListBook extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    this.state={\r\n        error:null,\r\n        books:[],\r\n        response:{}\r\n    }\r\n}\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8080/books').then((response) =>{\r\n            this.setState({\r\n                books: response.data\r\n            })\r\n        },\r\n        (error)=>{  \r\n            this.setState({error});\r\n        }\r\n        );\r\n    }\r\n    delete(Bookid) {  \r\n        const { books } = this.state;     \r\n       axios.delete('http://localhost:8080/books/${this.state.Bookid}' , {Bookid}).then(result=>{  \r\n         alert(result.data);  \r\n          this.setState({  \r\n            response:result,  \r\n            books:books.filter(Book=>Book.bookid !== Bookid)  \r\n          });  \r\n        });  \r\n      }\r\n\r\n    render(){\r\n        const{error,books}=this.state;  \r\n        if(error){  \r\n            return(  \r\n                <div>Error:{error.message}</div>  \r\n            )  \r\n        }  \r\n        else  \r\n        {\r\n        return(\r\n        <div>\r\n            <Table className=\"table table-striped table-dark\">\r\n                <thead className=\"btn-primary\">\r\n                    <tr>\r\n                        <th >BookId</th>\r\n                        <th >BookName</th> \r\n                        <th>Edition</th> \r\n                        <th >Author</th>\r\n                        <th >Date</th>\r\n                        <th >Amount</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {books.map(book => (\r\n                <tr key={book.Bookid}>\r\n                <td >{book.bookid}</td>\r\n                <td >{book.bookname}</td>\r\n                <td >{book.edition}</td>\r\n                <td>{book.author}</td>\r\n                <td >{book.date}</td>\r\n                <td >{book.amount}</td>\r\n                <td><Button size=\"la\" classname=\"mr-2\" variant=\"info\" onClick={() => this.props.edit(book.Bookid)}>Edit</Button>       \r\n                    <Button variant=\"danger\" onClick={() => this.delete(book.Bookid)}>Delete</Button>\r\n                </td>\r\n            </tr>\r\n        ))}\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n}\r\nexport default ListBook;\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import AddBook from './AddBook';\r\n// import PaginationButtons from './pagination';\r\n// import './Style.css';\r\n// class ListBook extends Component {\r\n//     state = {\r\n//         currentIndex: -1,\r\n//         list: this.returnList()\r\n//     }\r\n//     returnList() {\r\n//         if (localStorage.getItem('Books') == null)\r\n//             localStorage.setItem('Books', JSON.stringify([]))\r\n//         return JSON.parse(localStorage.getItem('Books'))\r\n//     }\r\n//     handleEdit = index => {\r\n//         this.setState({\r\n//             currentIndex: index\r\n//         })\r\n//     }\r\n//     handleDelete = (index) => {\r\n//         var list = this.returnList()\r\n//         list.splice(index, 1);\r\n//         localStorage.setItem('Books', JSON.stringify(list))\r\n//         this.setState({ list, currentIndex: -1 })\r\n//     }\r\n//     onAddOrEdit = (data) => {\r\n//         var list = this.returnList()\r\n//         if (this.state.currentIndex == -1)\r\n//             list.push(data)\r\n//         else\r\n//             list[this.state.currentIndex] = data\r\n//         localStorage.setItem('Books', JSON.stringify(list))\r\n//         this.setState({ list, currentIndex: -1 })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <AddBook\r\n//                     currentIndex={this.state.currentIndex}\r\n//                     list={this.state.list}\r\n//                     onAddOrEdit={this.onAddOrEdit}\r\n//                 />\r\n//                 <hr />\r\n//                 <h3>List of books</h3>\r\n//                 <div class=\"bs-example\">\r\n//                 <table className=\"table table-striped table-dark\" >\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th >Bookid</th>\r\n//                             <th >BookName</th> \r\n//                             <th>Edition</th> \r\n//                             <th >Author</th>\r\n//                             <th >Date</th>\r\n//                             <th >Amount</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.list.map((item, index) => {\r\n//                             return <tr key={index}>\r\n//                                 <td >{index}</td>\r\n//                                 <td >{item.BookName}</td>\r\n//                                 <td >{item.Edition}</td>\r\n//                                 <td>{item.Author}</td>\r\n//                                 <td >{item.Date}</td>\r\n//                                 <td >{item.Price}</td>\r\n//                                 <td><button className=\"buttons\" onClick={() => this.handleEdit(index)}>Edit</button></td>\r\n//                                 <td><button className=\"buttons\" onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n//                             </tr>\r\n//                         })}\r\n//                     </tbody>\r\n//                 </table>\r\n//                 <PaginationButtons />\r\n//             </div>\r\n\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n// }\r\n// export default ListBook;"]},"metadata":{},"sourceType":"module"}