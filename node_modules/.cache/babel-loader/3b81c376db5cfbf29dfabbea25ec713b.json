{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_projects\\\\library_management\\\\src\\\\components\\\\ListBook.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Table from './components/Table';\nexport default class ListBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: []\n    };\n  }\n\n  componentDidMount() {\n    debugger;\n    axios.get('http://localhost:8080/books').then(response => {\n      this.setState({\n        business: response.data\n      });\n      debugger;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  tabRow() {\n    return this.state.books.map(function (object, i) {\n      return /*#__PURE__*/React.createElement(Table, {\n        obj: object,\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 18\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Book List\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"BookId\"), \"                        \", /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 57\n      }\n    }, \"BookName\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Edition\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n      colSpan: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, this.tabRow())));\n  }\n\n} // import './Style.css';\n// import { Table } from 'react-bootstrap';\n// import {Button}from 'react-bootstrap';\n// import React, { Component } from 'react'  \n// import axios from 'axios';  \n// class ListBook extends Component {\n//     constructor(props){\n//         super(props);\n//     this.state={\n//         error:null,\n//         books:[],\n//         response:{}\n//     }\n// }\n//     componentDidMount() {\n//         axios.get('http://localhost:8080/books').then(response => response.data).then(  \n//             (result)=>{  \n//                 this.setState({  \n//                     books:result  \n//                 });  \n//         },\n//         (error)=>{  \n//             this.setState({error});\n//         }\n//         )\n//     }\n//     delete(Bookid) {  \n//         const { books } = this.state;     \n//        axios.delete('http://localhost:8080/books/' + Bookid ).then(result=>{  \n//          alert(result.data);  \n//           this.setState({  \n//             response:result,  \n//             books:books.filter(book=>book.bookid !== Bookid)  \n//           });  \n//         });  \n//       }\n//     render(){\n//         const{error,books}=this.state;  \n//         if(error){  \n//             return(  \n//                 <div>Error:{error.message}</div>  \n//             )  \n//         }  \n//         else  \n//         {\n//         return(\n//         <div>\n//             <Table>\n//                 <thead className=\"btn-primary\">\n//                     <tr>\n//                         <th >BookId</th>\n//                         <th >BookName</th> \n//                         <th>Edition</th> \n//                         <th >Author</th>\n//                         <th >Date</th>\n//                         <th >Amount</th>\n//                         <th>Action</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                 {this.state.books.map((book)=> {\n//                 return (<tr key={book.bookid}>\n//                 <td >{book.bookid}</td>\n//                 <td >{book.bookname}</td>\n//                 <td >{book.edition}</td>\n//                 <td>{book.author}</td>\n//                 <td >{book.date}</td>\n//                 <td >{book.amount}</td>\n//                 <td><Button size=\"la\" classname=\"mr-2\" variant=\"info\" \n//                 onClick={() => this.props.edit(book.bookid)}>Edit</Button>       \n//                     <Button variant=\"danger\" \n//                 onClick={() => this.delete(book.bookid)}>Delete</Button>\n//                 </td>\n//             </tr>\n//         )\n//                 })}\n//                 </tbody>\n//             </Table>\n//             </div>\n//         );\n//     }\n// }\n// }\n// export default ListBook;\n// import React, { Component } from 'react';\n// import AddBook from './AddBook';\n// import PaginationButtons from './pagination';\n// import './Style.css';\n// class ListBook extends Component {\n//     state = {\n//         currentIndex: -1,\n//         list: this.returnList()\n//     }\n//     returnList() {\n//         if (localStorage.getItem('Books') == null)\n//             localStorage.setItem('Books', JSON.stringify([]))\n//         return JSON.parse(localStorage.getItem('Books'))\n//     }\n//     handleEdit = index => {\n//         this.setState({\n//             currentIndex: index\n//         })\n//     }\n//     handleDelete = (index) => {\n//         var list = this.returnList()\n//         list.splice(index, 1);\n//         localStorage.setItem('Books', JSON.stringify(list))\n//         this.setState({ list, currentIndex: -1 })\n//     }\n//     onAddOrEdit = (data) => {\n//         var list = this.returnList()\n//         if (this.state.currentIndex == -1)\n//             list.push(data)\n//         else\n//             list[this.state.currentIndex] = data\n//         localStorage.setItem('Books', JSON.stringify(list))\n//         this.setState({ list, currentIndex: -1 })\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <AddBook\n//                     currentIndex={this.state.currentIndex}\n//                     list={this.state.list}\n//                     onAddOrEdit={this.onAddOrEdit}\n//                 />\n//                 <hr />\n//                 <h3>List of books</h3>\n//                 <div class=\"bs-example\">\n//                 <table className=\"table table-striped table-dark\" >\n//                     <thead>\n//                         <tr>\n//                             <th >Bookid</th>\n//                             <th >BookName</th> \n//                             <th>Edition</th> \n//                             <th >Author</th>\n//                             <th >Date</th>\n//                             <th >Amount</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {this.state.list.map((item, index) => {\n//                             return <tr key={index}>\n//                                 <td >{index}</td>\n//                                 <td >{item.BookName}</td>\n//                                 <td >{item.Edition}</td>\n//                                 <td>{item.Author}</td>\n//                                 <td >{item.Date}</td>\n//                                 <td >{item.Price}</td>\n//                                 <td><button className=\"buttons\" onClick={() => this.handleEdit(index)}>Edit</button></td>\n//                                 <td><button className=\"buttons\" onClick={() => this.handleDelete(index)}>Delete</button></td>\n//                             </tr>\n//                         })}\n//                     </tbody>\n//                 </table>\n//                 <PaginationButtons />\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n// export default ListBook;","map":{"version":3,"sources":["D:/React_projects/library_management/src/components/ListBook.js"],"names":["React","Component","axios","Table","ListBook","constructor","props","state","books","componentDidMount","get","then","response","setState","business","data","catch","error","console","log","tabRow","map","object","i","render","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAE9CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AACjB;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAU,6BAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAEF,QAAQ,CAACG;AAArB,OAAd;AACA;AAED,KALH,EAMGC,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KARH;AASD;;AAEDG,EAAAA,MAAM,GAAE;AACN,WAAO,KAAKb,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqB,UAASC,MAAT,EAAiBC,CAAjB,EAAmB;AAC3C,0BAAO,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAED,MAAZ;AAAoB,QAAA,GAAG,EAAEC,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,2CAC0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAD1C,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CADF,CADF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,MAAL,EADH,CAXF,CAFF,CADF;AAoBD;;AA9C2C,C,CAgDhsourcesContent":["import React, { Component } from 'react';  \r\nimport axios from 'axios';  \r\nimport Table from './components/Table';  \r\n  \r\nexport default class ListBook extends Component {  \r\n  \r\n  constructor(props) {  \r\n      super(props);  \r\n      this.state = {books: []};  \r\n    }  \r\n    componentDidMount(){  \r\n      debugger;  \r\n      axios.get('http://localhost:8080/books')  \r\n        .then(response => {  \r\n          this.setState({ business: response.data });  \r\n          debugger;  \r\n  \r\n        })  \r\n        .catch(function (error) {  \r\n          console.log(error);  \r\n        })  \r\n    }  \r\n      \r\n    tabRow(){  \r\n      return this.state.books.map(function(object, i){  \r\n          return <Table obj={object} key={i} />;  \r\n      });  \r\n    }  \r\n  \r\n    render() {  \r\n      return (  \r\n        <div>  \r\n          <h4 align=\"center\">Book List</h4>  \r\n          <table className=\"table table-striped\" style={{ marginTop: 10 }}>  \r\n            <thead>  \r\n              <tr>  \r\n                <th >BookId</th>                        <th >BookName</th> \r\n                <th>Edition</th> \r\n                <th >Author</th>\r\n                <th >Date</th>\r\n                <th >Amount</th>  \r\n                <th colSpan=\"4\">Action</th>  \r\n              </tr>  \r\n            </thead>  \r\n            <tbody>  \r\n             { this.tabRow() }   \r\n            </tbody>  \r\n          </table>  \r\n        </div>  \r\n      );  \r\n    }  \r\n  }  \r\n// import './Style.css';\r\n// import { Table } from 'react-bootstrap';\r\n// import {Button}from 'react-bootstrap';\r\n// import React, { Component } from 'react'  \r\n// import axios from 'axios';  \r\n\r\n// class ListBook extends Component {\r\n//     constructor(props){\r\n//         super(props);\r\n//     this.state={\r\n//         error:null,\r\n//         books:[],\r\n//         response:{}\r\n//     }\r\n// }\r\n//     componentDidMount() {\r\n//         axios.get('http://localhost:8080/books').then(response => response.data).then(  \r\n//             (result)=>{  \r\n//                 this.setState({  \r\n//                     books:result  \r\n//                 });  \r\n//         },\r\n//         (error)=>{  \r\n//             this.setState({error});\r\n//         }\r\n//         )\r\n//     }\r\n//     delete(Bookid) {  \r\n//         const { books } = this.state;     \r\n//        axios.delete('http://localhost:8080/books/' + Bookid ).then(result=>{  \r\n//          alert(result.data);  \r\n//           this.setState({  \r\n//             response:result,  \r\n//             books:books.filter(book=>book.bookid !== Bookid)  \r\n//           });  \r\n//         });  \r\n//       }\r\n\r\n//     render(){\r\n//         const{error,books}=this.state;  \r\n//         if(error){  \r\n//             return(  \r\n//                 <div>Error:{error.message}</div>  \r\n//             )  \r\n//         }  \r\n//         else  \r\n//         {\r\n//         return(\r\n//         <div>\r\n//             <Table>\r\n//                 <thead className=\"btn-primary\">\r\n//                     <tr>\r\n//                         <th >BookId</th>\r\n//                         <th >BookName</th> \r\n//                         <th>Edition</th> \r\n//                         <th >Author</th>\r\n//                         <th >Date</th>\r\n//                         <th >Amount</th>\r\n//                         <th>Action</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                 {this.state.books.map((book)=> {\r\n//                 return (<tr key={book.bookid}>\r\n//                 <td >{book.bookid}</td>\r\n//                 <td >{book.bookname}</td>\r\n//                 <td >{book.edition}</td>\r\n//                 <td>{book.author}</td>\r\n//                 <td >{book.date}</td>\r\n//                 <td >{book.amount}</td>\r\n//                 <td><Button size=\"la\" classname=\"mr-2\" variant=\"info\" \r\n//                 onClick={() => this.props.edit(book.bookid)}>Edit</Button>       \r\n//                     <Button variant=\"danger\" \r\n//                 onClick={() => this.delete(book.bookid)}>Delete</Button>\r\n//                 </td>\r\n//             </tr>\r\n//         )\r\n//                 })}\r\n//                 </tbody>\r\n//             </Table>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n// }\r\n// export default ListBook;\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import AddBook from './AddBook';\r\n// import PaginationButtons from './pagination';\r\n// import './Style.css';\r\n// class ListBook extends Component {\r\n//     state = {\r\n//         currentIndex: -1,\r\n//         list: this.returnList()\r\n//     }\r\n//     returnList() {\r\n//         if (localStorage.getItem('Books') == null)\r\n//             localStorage.setItem('Books', JSON.stringify([]))\r\n//         return JSON.parse(localStorage.getItem('Books'))\r\n//     }\r\n//     handleEdit = index => {\r\n//         this.setState({\r\n//             currentIndex: index\r\n//         })\r\n//     }\r\n//     handleDelete = (index) => {\r\n//         var list = this.returnList()\r\n//         list.splice(index, 1);\r\n//         localStorage.setItem('Books', JSON.stringify(list))\r\n//         this.setState({ list, currentIndex: -1 })\r\n//     }\r\n//     onAddOrEdit = (data) => {\r\n//         var list = this.returnList()\r\n//         if (this.state.currentIndex == -1)\r\n//             list.push(data)\r\n//         else\r\n//             list[this.state.currentIndex] = data\r\n//         localStorage.setItem('Books', JSON.stringify(list))\r\n//         this.setState({ list, currentIndex: -1 })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <AddBook\r\n//                     currentIndex={this.state.currentIndex}\r\n//                     list={this.state.list}\r\n//                     onAddOrEdit={this.onAddOrEdit}\r\n//                 />\r\n//                 <hr />\r\n//                 <h3>List of books</h3>\r\n//                 <div class=\"bs-example\">\r\n//                 <table className=\"table table-striped table-dark\" >\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th >Bookid</th>\r\n//                             <th >BookName</th> \r\n//                             <th>Edition</th> \r\n//                             <th >Author</th>\r\n//                             <th >Date</th>\r\n//                             <th >Amount</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.list.map((item, index) => {\r\n//                             return <tr key={index}>\r\n//                                 <td >{index}</td>\r\n//                                 <td >{item.BookName}</td>\r\n//                                 <td >{item.Edition}</td>\r\n//                                 <td>{item.Author}</td>\r\n//                                 <td >{item.Date}</td>\r\n//                                 <td >{item.Price}</td>\r\n//                                 <td><button className=\"buttons\" onClick={() => this.handleEdit(index)}>Edit</button></td>\r\n//                                 <td><button className=\"buttons\" onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n//                             </tr>\r\n//                         })}\r\n//                     </tbody>\r\n//                 </table>\r\n//                 <PaginationButtons />\r\n//             </div>\r\n\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n// }\r\n// export default ListBook;"]},"metadata":{},"sourceType":"module"}