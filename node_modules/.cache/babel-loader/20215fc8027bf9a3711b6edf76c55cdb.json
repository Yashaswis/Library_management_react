{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_projects\\\\library_management\\\\src\\\\components\\\\ListBook.js\";\nimport './Style.css';\nimport { Table } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst api = 'http://localhost:8080/books/';\n\nclass ListBook extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      books: [],\n      response: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(api + '/getbook').then(response => response.data).then(result => {\n      this.setState({\n        books: result\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  }\n\n  delete(BookId) {\n    const {\n      books\n    } = this.state;\n    axios.delete(api + '/deletebook' + BookId).then(result => {\n      alert(result.data);\n      this.setState({\n        response: result,\n        books: books.filter(book => book.bookId !== BookId)\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      books\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, \"Error:\", error.message);\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        className: \"btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"Book Id\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"BookName\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }, \"Edition\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"Author\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"Amount\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, this.state.books.map(book => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: book.bookId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, book.bookId), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        }, book.bookname), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }, book.edition), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }\n        }, book.author), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }\n        }, book.date), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        }, book.amount), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          size: \"la\",\n          classname: \"mr-2\",\n          variant: \"info\",\n          onClick: () => this.props.editBook(book.bookId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }\n        }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"danger\",\n          onClick: () => this.delete(book.bookId),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }\n        }, \"Delete\")));\n      }))));\n    }\n  }\n\n}\n\nexport default ListBook; // import React, { Component } from 'react';\n// import AddBook from './AddBook';\n// import PaginationButtons from './pagination';\n// import './Style.css';\n// class ListBook extends Component {\n//     state = {\n//         currentIndex: -1,\n//         list: this.returnList()\n//     }\n//     returnList() {\n//         if (localStorage.getItem('Books') == null)\n//             localStorage.setItem('Books', JSON.stringify([]))\n//         return JSON.parse(localStorage.getItem('Books'))\n//     }\n//     handleEdit = index => {\n//         this.setState({\n//             currentIndex: index\n//         })\n//     }\n//     handleDelete = (index) => {\n//         var list = this.returnList()\n//         list.splice(index, 1);\n//         localStorage.setItem('Books', JSON.stringify(list))\n//         this.setState({ list, currentIndex: -1 })\n//     }\n//     onAddOrEdit = (data) => {\n//         var list = this.returnList()\n//         if (this.state.currentIndex == -1)\n//             list.push(data)\n//         else\n//             list[this.state.currentIndex] = data\n//         localStorage.setItem('Books', JSON.stringify(list))\n//         this.setState({ list, currentIndex: -1 })\n//     }\n//     render() {\n//         return (\n//             <div>\n//                 <AddBook\n//                     currentIndex={this.state.currentIndex}\n//                     list={this.state.list}\n//                     onAddOrEdit={this.onAddOrEdit}\n//                 />\n//                 <hr />\n//                 <h3>List of books</h3>\n//                 <div class=\"bs-example\">\n//                 <table className=\"table table-striped table-dark\" >\n//                     <thead>\n//                         <tr>\n//                             <th >Bookid</th>\n//                             <th >BookName</th> \n//                             <th>Edition</th> \n//                             <th >Author</th>\n//                             <th >Date</th>\n//                             <th >Amount</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {this.state.list.map((item, index) => {\n//                             return <tr key={index}>\n//                                 <td >{index}</td>\n//                                 <td >{item.BookName}</td>\n//                                 <td >{item.Edition}</td>\n//                                 <td>{item.Author}</td>\n//                                 <td >{item.Date}</td>\n//                                 <td >{item.Price}</td>\n//                                 <td><button className=\"buttons\" onClick={() => this.handleEdit(index)}>Edit</button></td>\n//                                 <td><button className=\"buttons\" onClick={() => this.handleDelete(index)}>Delete</button></td>\n//                             </tr>\n//                         })}\n//                     </tbody>\n//                 </table>\n//                 <PaginationButtons />\n//             </div>\n//             </div>\n//         );\n//     }\n// }\n// export default ListBook;","map":{"version":3,"sources":["D:/React_projects/library_management/src/components/ListBook.js"],"names":["Table","Button","React","Component","axios","api","ListBook","constructor","props","state","error","books","response","componentDidMount","get","then","data","result","setState","delete","BookId","alert","filter","book","bookId","render","message","map","bookname","edition","author","date","amount","editBook"],"mappings":"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,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,IAAb;AAAkB,UAAA,SAAS,EAAC,MAA5B;AAAmC,UAAA,OAAO,EAAC,MAA3C;AACJ,UAAA,OAAO,EAAE,MAAM,KAAKxB,KAAL,CAAWyB,QAAX,CAAoBV,IAAI,CAACC,MAAzB,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAEI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AACJ,UAAA,OAAO,EAAE,MAAM,KAAKL,MAAL,CAAYI,IAAI,CAACC,MAAjB,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAPQ,CAAR;AAcC,OAfA,CADD,CAZJ,CADJ,CADA;AAmCH;AACJ;;AA7EgC;;AA+EjC,eAAelB,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":[" import './Style.css';\r\nimport { Table } from 'react-bootstrap';\r\nimport {Button}from 'react-bootstrap';\r\nimport React, { Component } from 'react'  \r\nimport axios from 'axios';  \r\n\r\nconst api='http://localhost:8080/books/';\r\n\r\nclass ListBook extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    this.state={\r\n        error:null,\r\n        books:[],\r\n        response:{}\r\n    }\r\n}\r\n    componentDidMount() {\r\n        axios.get(api + '/getbook').then(response => response.data).then(  \r\n            (result)=>{  \r\n                this.setState({  \r\n                    books:result  \r\n                });  \r\n        },\r\n        (error)=>{  \r\n            this.setState({error});\r\n        }\r\n        )\r\n    }\r\n    delete(BookId) {  \r\n        const { books } = this.state;     \r\n       axios.delete(api + '/deletebook' + BookId ).then(result=>{  \r\n         alert(result.data);  \r\n          this.setState({  \r\n            response:result,  \r\n            books:books.filter(book=>book.bookId !== BookId)  \r\n          });  \r\n        });  \r\n      }\r\n\r\n    render(){\r\n        const{error,books}=this.state;  \r\n        if(error){  \r\n            return(  \r\n                <div>Error:{error.message}</div>  \r\n            )  \r\n        }  \r\n        else  \r\n        {\r\n        return(\r\n        <div>\r\n            <Table>\r\n                <thead className=\"btn-primary\">\r\n                    <tr>\r\n                        <th >Book Id</th>\r\n                        <th >BookName</th> \r\n                        <th>Edition</th> \r\n                        <th >Author</th>\r\n                        <th >Date</th>\r\n                        <th >Amount</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.state.books.map((book)=> {\r\n                return (<tr key={book.bookId}>\r\n                <td >{book.bookId}</td>\r\n                <td >{book.bookname}</td>\r\n                <td >{book.edition}</td>\r\n                <td>{book.author}</td>\r\n                <td >{book.date}</td>\r\n                <td >{book.amount}</td>\r\n                <td><Button size=\"la\" classname=\"mr-2\" variant=\"info\" \r\n                onClick={() => this.props.editBook(book.bookId)}>Edit</Button>       \r\n                    <Button variant=\"danger\" \r\n                onClick={() => this.delete(book.bookId)}>Delete</Button>\r\n                </td>\r\n            </tr>\r\n        )\r\n                })}\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n}\r\nexport default ListBook;\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import AddBook from './AddBook';\r\n// import PaginationButtons from './pagination';\r\n// import './Style.css';\r\n// class ListBook extends Component {\r\n//     state = {\r\n//         currentIndex: -1,\r\n//         list: this.returnList()\r\n//     }\r\n//     returnList() {\r\n//         if (localStorage.getItem('Books') == null)\r\n//             localStorage.setItem('Books', JSON.stringify([]))\r\n//         return JSON.parse(localStorage.getItem('Books'))\r\n//     }\r\n//     handleEdit = index => {\r\n//         this.setState({\r\n//             currentIndex: index\r\n//         })\r\n//     }\r\n//     handleDelete = (index) => {\r\n//         var list = this.returnList()\r\n//         list.splice(index, 1);\r\n//         localStorage.setItem('Books', JSON.stringify(list))\r\n//         this.setState({ list, currentIndex: -1 })\r\n//     }\r\n//     onAddOrEdit = (data) => {\r\n//         var list = this.returnList()\r\n//         if (this.state.currentIndex == -1)\r\n//             list.push(data)\r\n//         else\r\n//             list[this.state.currentIndex] = data\r\n//         localStorage.setItem('Books', JSON.stringify(list))\r\n//         this.setState({ list, currentIndex: -1 })\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div>\r\n//                 <AddBook\r\n//                     currentIndex={this.state.currentIndex}\r\n//                     list={this.state.list}\r\n//                     onAddOrEdit={this.onAddOrEdit}\r\n//                 />\r\n//                 <hr />\r\n//                 <h3>List of books</h3>\r\n//                 <div class=\"bs-example\">\r\n//                 <table className=\"table table-striped table-dark\" >\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th >Bookid</th>\r\n//                             <th >BookName</th> \r\n//                             <th>Edition</th> \r\n//                             <th >Author</th>\r\n//                             <th >Date</th>\r\n//                             <th >Amount</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {this.state.list.map((item, index) => {\r\n//                             return <tr key={index}>\r\n//                                 <td >{index}</td>\r\n//                                 <td >{item.BookName}</td>\r\n//                                 <td >{item.Edition}</td>\r\n//                                 <td>{item.Author}</td>\r\n//                                 <td >{item.Date}</td>\r\n//                                 <td >{item.Price}</td>\r\n//                                 <td><button className=\"buttons\" onClick={() => this.handleEdit(index)}>Edit</button></td>\r\n//                                 <td><button className=\"buttons\" onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n//                             </tr>\r\n//                         })}\r\n//                     </tbody>\r\n//                 </table>\r\n//                 <PaginationButtons />\r\n//             </div>\r\n\r\n//             </div>\r\n//         );\r\n//     }\r\n\r\n// }\r\n// export default ListBook;"]},"metadata":{},"sourceType":"module"}